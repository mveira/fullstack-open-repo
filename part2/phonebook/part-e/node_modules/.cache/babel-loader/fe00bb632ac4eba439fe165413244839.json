{"ast":null,"code":"var _jsxFileName = \"/Users/marcusveira/Desktop/fullstack-open-repo/part2/phonebook/part-e/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Persons from './components/Persons';\nimport Filter from './components/SearchFilter';\nimport Form from './components/AddPersonForm';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSuccess, setIsSuccsess] = useState(false);\n  useEffect(() => {\n    console.log('effect');\n    personsService.getAll().then(initialPerson => {\n      // console.log('promise fulfilled') \n      setPersons(initialPerson);\n    });\n  }, []);\n  const addPerson = () => {\n    const newPersonObj = {\n      name: newName,\n      number: newNumber\n    };\n    if (persons.find(p => p.name === newName)) {\n      // if name exists\n      if (window.confirm(`${newName} already exists in the phone book would uou like to update the number ?`)) {\n        const personToUpDate = {\n          ...persons.find(p => p.name === newName),\n          number: newNumber\n        };\n        personsService.update(personToUpDate.id, personToUpDate).then(response => {\n          setPersons(persons.map(person => person.id !== personToUpDate.id ? person : response));\n          setIsSuccsess(true);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        });\n      }\n    } else personsService.create(newPersonObj).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      setIsSuccsess(true);\n      // console.log( 'message:', isSuccess)\n      setMessage(` '${returnedPerson.name}' was added to phone book`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n      setNewName('');\n      setNewNumber('');\n    });\n  };\n  const updatePerson = id => {\n    const person = persons.find(p => p.id === id);\n    if (window.confirm(`${newName} already exists in the phone book would uou like to update the number ?`)) {\n      //create a copy of a person object with the change number\n      const changedNumber = {\n        ...person,\n        number: newNumber\n      };\n      //update number with person service \n      personsService.update(id, changedNumber).then(response => {\n        setPersons(persons.map(person => person.id !== id ? person : response));\n        setIsSuccsess(true);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }).catch(error => {\n        console.log(\"Error\");\n        setIsSuccsess(false);\n        setPersons(person.filter(person => person.id !== id));\n      });\n    }\n  };\n  const addNewPersonHandler = event => {\n    // console.log('addNewPersonHandler')\n    event.preventDefault();\n    const person = persons.find(person => person.name === newName);\n    person ? updatePerson(person.id, persons) : addPerson(persons);\n    //update number\n  };\n\n  const handleDelete = id => {\n    console.log(id);\n    console.log('person list:', persons);\n    console.log('person list with filter: ', persons.filter(p => p.id !== id));\n    if (window.confirm(`Are you sure you want to delete ?`)) {\n      const newList = persons.filter(p => p.id !== id);\n      console.log('new person list', newList);\n      personsService.del(id);\n      setPersons(persons.filter(p => p.id !== id));\n    }\n  };\n  const handleNameFilter = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const PersonsToShow = !searchTerm ? persons : persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phone book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      isSuccess: isSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      searchTerm: searchTerm,\n      handleChange: event => handleNameFilter(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitPerson: addNewPersonHandler,\n      name: newName,\n      number: newNumber,\n      nameChangeHandler: handleNameChange,\n      numberChangeHandler: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: PersonsToShow,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"wh/Ug6wclTbdwQvoXXyI5TYIyGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","personsService","Persons","Filter","Form","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","message","setMessage","isSuccess","setIsSuccsess","console","log","getAll","then","initialPerson","addPerson","newPersonObj","name","number","find","p","window","confirm","personToUpDate","update","id","response","map","person","create","returnedPerson","concat","setTimeout","updatePerson","changedNumber","catch","error","filter","addNewPersonHandler","event","preventDefault","handleDelete","newList","del","handleNameFilter","target","value","handleNameChange","handleNumberChange","PersonsToShow","toLowerCase","includes"],"sources":["/Users/marcusveira/Desktop/fullstack-open-repo/part2/phonebook/part-e/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nimport personsService from './services/persons'\n\nimport Persons from './components/Persons'\nimport Filter from './components/SearchFilter'\nimport Form from './components/AddPersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [message, setMessage] = useState('')\n  const [isSuccess, setIsSuccsess] = useState(false)\n\n  useEffect(() => {\n      console.log('effect')\n      personsService    \n          .getAll()      \n          .then( initialPerson => {\n                // console.log('promise fulfilled') \n                setPersons(initialPerson)\n        })\n  }, [])\n  \n  const addPerson = () => {\n    const newPersonObj = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.find((p) => p.name === newName)){// if name exists\n      if(window.confirm( `${newName} already exists in the phone book would uou like to update the number ?`)){\n        const personToUpDate = {...persons.find((p) => p.name === newName ), number: newNumber}\n        \n        personsService.update(personToUpDate.id, personToUpDate).then(response => \n          {\n            setPersons(persons.map(person => person.id !== personToUpDate.id ? person : response)) \n            setIsSuccsess(true)\n            setNewName(\"\")\n            setNewNumber(\"\")\n          }\n        )\n      } \n    }\n    else(\n      personsService.create(newPersonObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setIsSuccsess(true)\n        // console.log( 'message:', isSuccess)\n        setMessage(\n          ` '${returnedPerson.name}' was added to phone book`\n        )\n        setTimeout(() => {\n          setMessage(null)\n           }, 5000);\n        setNewName('');\n        setNewNumber('');\n          }\n        )\n    )   \n  } \n\n  const updatePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    if(window.confirm( `${newName} already exists in the phone book would uou like to update the number ?`)){  \n      //create a copy of a person object with the change number\n      const changedNumber = {...person, number: newNumber}\n      //update number with person service \n      personsService\n      .update(id, changedNumber).then(response => {\n        setPersons(persons.map(person => person.id !== id ? person : response)) \n        setIsSuccsess(true)\n        setNewName(\"\")\n        setNewNumber(\"\")\n      })\n      .catch( error => {\n        console.log(\"Error\")\n        setIsSuccsess(false)\n        setPersons(person.filter(person => person.id !==  id))\n      })\n    } \n  }\n\n  const addNewPersonHandler = (event) => {\n    // console.log('addNewPersonHandler')\n      event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n      person ? updatePerson(person.id, persons): addPerson(persons)\n        //update number\n  }\n\n  const handleDelete = (id) => {\n  \n    console.log(id)\n    console.log('person list:', persons)\n    console.log('person list with filter: ', persons.filter(p => p.id !== id))\n    if (window.confirm( `Are you sure you want to delete ?`)){\n          const newList =  persons.filter(p => p.id !== id)\n          console.log('new person list', newList)\n          personsService.del(id)\n          setPersons(persons.filter(p => p.id !== id));\n    }\n  }\n\n  const handleNameFilter = (event) => {   \n      setSearchTerm(event.target.value)  \n  }\n\n  const handleNameChange = (event) => {  \n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const PersonsToShow = !searchTerm\n  ? persons\n  : persons.filter( person => person.name\n                            .toLowerCase()\n                            .includes(searchTerm.toLowerCase()) )\n                          \n  return (\n  <>  \n      <h2>Phone book</h2>\n\n      <Notification message={message}  isSuccess={isSuccess}/>\n\n      <Filter searchTerm={searchTerm} handleChange={(event)=> handleNameFilter(event)}/>\n      \n      <h3>Add a new</h3>\n       \n       <Form\n           submitPerson={addNewPersonHandler}\n           name={newName}\n           number={newNumber}\n           nameChangeHandler={handleNameChange}\n           numberChangeHandler={handleNumberChange}/>\n      <h3>Numbers</h3>\n      \n      <Persons persons={PersonsToShow} onDelete={handleDelete}/>\n      \n      </>\n  )\n  }\n\n  export default App\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}