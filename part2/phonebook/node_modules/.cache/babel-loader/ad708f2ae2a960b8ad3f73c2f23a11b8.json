{"ast":null,"code":"var _jsxFileName = \"/Users/marcusveira/Desktop/fullstack-open-repo/part2/phonebook/src/App.js\";\nimport { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Person from './components/Person';\nimport SearchFilter from './components/SearchFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchTerm, setSearchTerm] = useState('Search number');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    personsService.getAll().then(initialPerson => {\n      console.log('promise fulfilled');\n      setPersons(initialPerson);\n    });\n  }, []);\n  const addPerson = event => {\n    event.preventDefault();\n    const personObj = {\n      ...(isFound === true && alert(`The name ${newName} already exits to the phone book`)),\n      ...(isFound === false && {\n        name: newName\n      }),\n      ...{\n        number: newNumber\n      }\n    };\n    personsService.create(personObj).then(response => {\n      setPersons(response.data);\n    });\n  };\n  const isFound = persons.some(element => {\n    // Use's the some array function to check's if the name exists in the persons array array.\n    // It also checks if the name's spelled with capitals,\n    // it only looks if the first name is capitalized \n    if (element.name === newName) {\n      return true;\n    }\n    return false;\n  });\n  const handleNameFilter = event => {\n    console.log(event.target.value);\n    setSearchTerm(event.target.value);\n  };\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n  const filteredPersons = !searchTerm ? persons : persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilter, {\n      value: searchTerm,\n      handleChange: event => handleNameFilter(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPersons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        person: person\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default App;","map":{"version":3,"names":["useState","useEffect","personsService","Person","SearchFilter","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","showAll","setShowAll","console","log","getAll","then","initialPerson","addPerson","event","preventDefault","personObj","isFound","alert","name","number","create","response","data","some","element","handleNameFilter","target","value","handleNumberChange","filteredPersons","filter","person","toLowerCase","includes","map"],"sources":["/Users/marcusveira/Desktop/fullstack-open-repo/part2/phonebook/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Person from './components/Person'\nimport SearchFilter from './components/SearchFilter'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('Search number')\n  const [showAll, setShowAll] = useState(true)\n  \n  useEffect(() => {\n    console.log('effect')\n    personsService    \n        .getAll()      \n        .then( initialPerson => {\n            console.log('promise fulfilled') \n            setPersons(initialPerson)     \n        })\n      },[]) \n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObj = {\n      ...(isFound === true && alert( `The name ${newName} already exits to the phone book`)),\n      ...(isFound === false &&  {name:newName}),\n      ...({number:newNumber}),\n    } \n    \n    personsService \n            .create(personObj)\n            .then(response => {\n                setPersons(response.data)\n            })\n    }\n\n    const isFound = persons.some(element => {\n      // Use's the some array function to check's if the name exists in the persons array array.\n      // It also checks if the name's spelled with capitals,\n      // it only looks if the first name is capitalized \n      if (element.name === newName) {\n        return true\n      }\n      return false\n    })\n\n\n\n    const handleNameFilter = (event) => {   \n      console.log(event.target.value)    \n      setSearchTerm(event.target.value)  \n  }\n\n  const handleNumberChange = (event) => {   \n    console.log(event.target.value)    \n    setNewNumber(event.target.value)  \n}\n\nconst filteredPersons = !searchTerm\n? persons\n: persons.filter(person => \n        person.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n\n\nreturn (\n  <>\n    \n  <h2>Phonebook</h2>\n     \n      <SearchFilter value={searchTerm} \n              handleChange={(event)=> handleNameFilter(event)}\n       />\n       \n     \n      <h2>Numbers</h2>\n      <ul>\n      { filteredPersons.map(person => <Person  person={person} />)}\n      </ul>\n  </>\n)\n\n\n\n\n  }\n\nexport default App\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}