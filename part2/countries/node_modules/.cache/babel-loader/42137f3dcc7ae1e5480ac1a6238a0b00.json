{"ast":null,"code":"var _jsxFileName = \"/Users/marcusveira/Desktop/fullstack-open-repo/part2/countries/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Countries from './components/Countries';\nimport SearchFilter from './components/SearchFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  //  console.log('counties', countries.length)\n  //  console.log('country1', countries[0])\n  //  console.log('country1', countries[0].name.official)\n\n  // const handleInputFilter = (event) =>{\n  //   event.preventDefault()\n  //   console.log(searchTerm)\n  //   setSearchTerm(event.target.value)\n  // }\n  // console.log(countries)\n\n  const handleSearchInputFilter = event => {\n    setSearchTerm(event.target.value);\n  };\n  for (let c in countries[2].languages) {\n    console.log(\"lan\", c);\n  }\n  const CountriesToShow = !searchTerm ? countries : countries.filter(country => country.name.official.toLowerCase().includes(searchTerm.toLowerCase())).sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchTerm,\n        onChange: handleSearchInputFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: CountriesToShow.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: country.name.common\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 2\n  }, this);\n};\n_s(App, \"JRVniZN2nH0tTRnPS/CsWCpG+IM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Countries","SearchFilter","App","countries","setCountries","searchTerm","setSearchTerm","get","then","response","data","handleSearchInputFilter","event","target","value","c","languages","console","log","CountriesToShow","filter","country","name","official","toLowerCase","includes","sort","map","common"],"sources":["/Users/marcusveira/Desktop/fullstack-open-repo/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Countries from './components/Countries'\nimport SearchFilter from './components/SearchFilter'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n      axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  },[])\n\n  \n\n//  console.log('counties', countries.length)\n//  console.log('country1', countries[0])\n//  console.log('country1', countries[0].name.official)\n\n  // const handleInputFilter = (event) =>{\n  //   event.preventDefault()\n  //   console.log(searchTerm)\n  //   setSearchTerm(event.target.value)\n  // }\n  // console.log(countries)\n\n  const handleSearchInputFilter = (event) => {\n    setSearchTerm(event.target.value)\n    }\n\n    for  (let c in countries[2].languages){\n      console.log(\"lan\", c)\n  }  \n\n  const CountriesToShow = !searchTerm\n        ? countries\n        : countries.filter(country => \n                           country.name.official.toLowerCase()\n                           .includes(searchTerm\n                           .toLowerCase())\n                           ).sort()  \n  return (\n <div>\n    <div>\n      find countries <input \n        value={searchTerm}  \n        onChange={handleSearchInputFilter}\n      />\n    </div>\n\n  \n    <h1>Countries</h1>\n    \n    <ul>\n     \n      {/* { CountriesToShow.length > 10 || CountriesToShow.length < 0\n      ? <p>Too many matches, specify another filter</p>\n      :   */}\n      \n       { CountriesToShow.map(country =>\n          <div>\n          <section>\n            <h1>{country.name.common}</h1>\n            \n          {/* <p>Capital {country.capital}</p>\n          <p>Area {country.area}</p>\n          {console.log(country.languages[0])} */}\n          \n        </section>\n        </div>\n        \n        \n    \n      )\n}\n    </ul>\n\n      {/* {countries.map(obj => <div>\n                              <p>{obj.name.official}</p>\n                              <p>{obj.capital}</p>\n                              <p>{obj.region}</p>\n                              <p>{obj.flag}</p>\n                              <hr/>\n                            </div>\n                    ) */\n          \n\n    /* Search country <SearchFilter value={searchTerm}\n          handleChange={(event)=> handleInputFilter(event)} \n    />   */}\n\n    {/* <Countries countries={countries}/>     */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AAAA;AAEpD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZC,KAAK,CACJQ,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChBL,YAAY,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;;EAIP;EACA;EACA;;EAEE;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzCN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,KAAM,IAAIC,CAAC,IAAIZ,SAAS,CAAC,CAAC,CAAC,CAACa,SAAS,EAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEH,CAAC,CAAC;EACzB;EAEA,MAAMI,eAAe,GAAG,CAACd,UAAU,GAC3BF,SAAS,GACTA,SAAS,CAACiB,MAAM,CAACC,OAAO,IACPA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACC,WAAW,EAAE,CAClCC,QAAQ,CAACpB,UAAU,CACnBmB,WAAW,EAAE,CAAC,CACd,CAACE,IAAI,EAAE;EACjC,oBACD;IAAA,wBACG;MAAA,2CACiB;QACb,KAAK,EAAErB,UAAW;QAClB,QAAQ,EAAEM;MAAwB;QAAA;QAAA;QAAA;MAAA,QAClC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eAGN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAElB;MAAA,UAMKQ,eAAe,CAACQ,GAAG,CAACN,OAAO,iBAC1B;QAAA,uBACA;UAAA,uBACE;YAAA,UAAKA,OAAO,CAACC,IAAI,CAACM;UAAM;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA;MAMxB;QAAA;QAAA;QAAA;MAAA,QACJ;IAIP;MAAA;MAAA;MAAA;IAAA,QAEE;EAAA;IAAA;IAAA;IAAA;EAAA,QAiBC;AAEV,CAAC;AAAA,GA7FK1B,GAAG;AAAA,KAAHA,GAAG;AA+FT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}