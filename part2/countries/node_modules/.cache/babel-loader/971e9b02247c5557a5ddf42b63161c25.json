{"ast":null,"code":"var _jsxFileName = \"/Users/marcusveira/Desktop/fullstack-open-repo/part2/countries/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Countries from './components/Countries';\nimport SearchFilter from './components/SearchFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    console.log('effect');\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      console.log('promise fulfiled');\n      setCountries(response.data);\n    });\n  }, []);\n  console.log('render', countries.map(obj => obj.name.official));\n\n  //  console.log('counties', countries.length)\n  //  console.log('country1', countries[0])\n  //  console.log('country1', countries[0].name.official)\n\n  // const handleInputFilter = (event) =>{\n  //   event.preventDefault()\n  //   console.log(searchTerm)\n  //   setSearchTerm(event.target.value)\n  // }\n  // console.log(countries)\n\n  const handleSearchInputFilter = event => {\n    console.log(event.target.value);\n    const searchEntry = event.target.value;\n    countries.filter(country => !country.name.official.includes(searchEntry)).length() <= 10 ? setSearchTerm(searchEntry) : alert(\"Your query is to ambiguos... Please make your query more specific\");\n  };\n\n  // const FilterdCountries = countries.filter(country => country.name.official.includes(searchTerm))\n  //       ? FilterdCountries => 10\n\n  const ShowCountries = !searchTerm ? countries : countries.filter(country => country.name.official.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchTerm,\n        onChange: handleSearchInputFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ShowCountries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.name.official\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), \": \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"search again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 2\n  }, this);\n};\n_s(App, \"JRVniZN2nH0tTRnPS/CsWCpG+IM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Countries","SearchFilter","App","countries","setCountries","searchTerm","setSearchTerm","console","log","get","then","response","data","map","obj","name","official","handleSearchInputFilter","event","target","value","searchEntry","filter","country","includes","length","alert","ShowCountries","toLowerCase"],"sources":["/Users/marcusveira/Desktop/fullstack-open-repo/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Countries from './components/Countries'\nimport SearchFilter from './components/SearchFilter'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n      console.log('effect')\n      axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        console.log('promise fulfiled')\n        setCountries(response.data)\n      })\n  },[])\n\n  \n\n  console.log('render', countries.map(obj => obj.name.official))\n\n//  console.log('counties', countries.length)\n//  console.log('country1', countries[0])\n//  console.log('country1', countries[0].name.official)\n\n  // const handleInputFilter = (event) =>{\n  //   event.preventDefault()\n  //   console.log(searchTerm)\n  //   setSearchTerm(event.target.value)\n  // }\n  // console.log(countries)\n\n  const handleSearchInputFilter = (event) => {\n    console.log(event.target.value)\n    const searchEntry = event.target.value\n   \n    countries.filter(country => !country.name.official.includes(searchEntry)).length() <= 10\n    ?  setSearchTerm(searchEntry)\n    :  alert(\"Your query is to ambiguos... Please make your query more specific\")\n   \n  }\n\n\n  // const FilterdCountries = countries.filter(country => country.name.official.includes(searchTerm))\n  //       ? FilterdCountries => 10\n\n  const ShowCountries = !searchTerm\n        ? countries\n        : countries.filter(country => country.name.official.toLowerCase().includes(searchTerm.toLowerCase())) \n        \n        \n\n  return (\n <div>\n    <div>\n      <input \n        value={searchTerm}  \n        onChange={handleSearchInputFilter}\n      />\n    </div>\n\n    <h1>Countries</h1>\n    \n    <ul>\n      {ShowCountries.map(country => \n        <p>{country.name.official}</p>)\n      }\n    </ul>: <p>search again</p>\n  \n\n      {/* {countries.map(obj => <div>\n                              <p>{obj.name.official}</p>\n                              <p>{obj.capital}</p>\n                              <p>{obj.region}</p>\n                              <p>{obj.flag}</p>\n                              <hr/>\n                            </div>\n                    ) */\n          \n\n    /* Search country <SearchFilter value={searchTerm}\n          handleChange={(event)=> handleInputFilter(event)} \n    />   */}\n\n    {/* <Countries countries={countries}/>     */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AAAA;AAEpD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZS,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBT,KAAK,CACJU,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BJ,YAAY,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAILL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,SAAS,CAACU,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC;;EAEhE;EACA;EACA;;EAEE;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzCX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/B,MAAMC,WAAW,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK;IAEtCjB,SAAS,CAACmB,MAAM,CAACC,OAAO,IAAI,CAACA,OAAO,CAACR,IAAI,CAACC,QAAQ,CAACQ,QAAQ,CAACH,WAAW,CAAC,CAAC,CAACI,MAAM,EAAE,IAAI,EAAE,GACrFnB,aAAa,CAACe,WAAW,CAAC,GAC1BK,KAAK,CAAC,mEAAmE,CAAC;EAE/E,CAAC;;EAGD;EACA;;EAEA,MAAMC,aAAa,GAAG,CAACtB,UAAU,GACzBF,SAAS,GACTA,SAAS,CAACmB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACR,IAAI,CAACC,QAAQ,CAACY,WAAW,EAAE,CAACJ,QAAQ,CAACnB,UAAU,CAACuB,WAAW,EAAE,CAAC,CAAC;EAI3G,oBACD;IAAA,wBACG;MAAA,uBACE;QACE,KAAK,EAAEvB,UAAW;QAClB,QAAQ,EAAEY;MAAwB;QAAA;QAAA;QAAA;MAAA;IAClC;MAAA;MAAA;MAAA;IAAA,QACE,eAEN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAElB;MAAA,UACGU,aAAa,CAACd,GAAG,CAACU,OAAO,iBACxB;QAAA,UAAIA,OAAO,CAACR,IAAI,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QAE9B,qBAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAkBpB;AAEV,CAAC;AAAA,GApFKd,GAAG;AAAA,KAAHA,GAAG;AAsFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}